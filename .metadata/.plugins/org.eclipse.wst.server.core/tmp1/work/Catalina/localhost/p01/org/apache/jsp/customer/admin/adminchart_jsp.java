/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-09-09 08:24:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.customer.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminchart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/data.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/drilldown.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var products = null;\r\n");
      out.write("\r\n");
      out.write("function display(data){\r\n");
      out.write("\t$(data).each(function(index,data){\r\n");
      out.write("\tvar result = '';\r\n");
      out.write("\tresult += '<div id=\"menu\" class=\"item ' +data.category+ ' col-sm-2 col-md-2 col-lg-2 mb-3\">';\r\n");
      out.write("\tresult += '<a href=\"adminmenudetail.mc?menu_code='+data.menu_code+'\"><p><img class=\"img-fluid\" src=\"customer/img/'+data.img1+'\">'+data.name+'</p>';\r\n");
      out.write("\tresult += '<p>재고 : '+data.stock+'</p>';\r\n");
      out.write("\tresult += '<p>가격 : '+data.price+'</p>';\r\n");
      out.write("\tresult += '<p> 카테고리 : '+data.category+'</p>';\r\n");
      out.write("\tresult += '</a>';\r\n");
      out.write("\tresult += '</div>';\r\n");
      out.write("\t$('#portfolio-grid').append(result);\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("function getMain(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("/* \t\ttype:'get', */\r\n");
      out.write("\t\t  url: 'adminmenuselect.mc',\r\n");
      out.write("\t\t  dataType: 'json',\r\n");
      out.write("\t\tasync:false,\r\n");
      out.write("\t\tsuccess: function(ja){\r\n");
      out.write("\t\t\tproducts = ja;\r\n");
      out.write("\t\t\tdisplay(ja);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(){\r\n");
      out.write("\t\t\talert('get Error.........');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<style>\r\n");
      out.write(".highcharts-figure, .highcharts-data-table table {\r\n");
      out.write("    min-width: 310px; \r\n");
      out.write("    max-width: 800px;\r\n");
      out.write("    margin: 1em auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#container {\r\n");
      out.write("    height: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".highcharts-data-table table {\r\n");
      out.write("\tfont-family: Verdana, sans-serif;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\tborder: 1px solid #EBEBEB;\r\n");
      out.write("\tmargin: 10px auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tmax-width: 500px;\r\n");
      out.write("}\r\n");
      out.write(".highcharts-data-table caption {\r\n");
      out.write("    padding: 1em 0;\r\n");
      out.write("    font-size: 1.2em;\r\n");
      out.write("    color: #555;\r\n");
      out.write("}\r\n");
      out.write(".highcharts-data-table th {\r\n");
      out.write("\tfont-weight: 600;\r\n");
      out.write("    padding: 0.5em;\r\n");
      out.write("}\r\n");
      out.write(".highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n");
      out.write("    padding: 0.5em;\r\n");
      out.write("}\r\n");
      out.write(".highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n");
      out.write("    background: #f8f8f8;\r\n");
      out.write("}\r\n");
      out.write(".highcharts-data-table tr:hover {\r\n");
      out.write("    background: #f1f7ff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/accessibility.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<figure class=\"highcharts-figure\">\r\n");
      out.write("    <div id=\"container\"></div>\r\n");
      out.write("    <p class=\"highcharts-description\">\r\n");
      out.write("        A basic column chart compares rainfall values between four cities.\r\n");
      out.write("        Tokyo has the overall highest amount of rainfall, followed by New York.\r\n");
      out.write("        The chart is making use of the axis crosshair feature, to highlight\r\n");
      out.write("        months as they are hovered over.\r\n");
      out.write("    </p>\r\n");
      out.write("</figure>\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var chart;\r\n");
      out.write("chart = Highcharts.chart('container', {\r\n");
      out.write("    chart: {\r\n");
      out.write("        type: 'column'\r\n");
      out.write("    },\r\n");
      out.write("    title: {\r\n");
      out.write("        text: 'Monthly Average MENU'\r\n");
      out.write("    },\r\n");
      out.write("    subtitle: {\r\n");
      out.write("        text: 'Source: WorldClimate.com'\r\n");
      out.write("    },\r\n");
      out.write("    yAxis: {\r\n");
      out.write("        min: 0,\r\n");
      out.write("        title: {\r\n");
      out.write("            text: 'Rainfall (mm)'\r\n");
      out.write("        }\r\n");
      out.write("    },\r\n");
      out.write("    tooltip: {\r\n");
      out.write("        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table id=\"charts\">',\r\n");
      out.write("        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n");
      out.write("            '<td style=\"padding:0\"><b>{point.y:.1f} mm</b></td></tr>',\r\n");
      out.write("        footerFormat: '</table>',\r\n");
      out.write("        shared: true,\r\n");
      out.write("        useHTML: true\r\n");
      out.write("    },\r\n");
      out.write("    plotOptions: {\r\n");
      out.write("        column: {\r\n");
      out.write("            pointPadding: 0.2,\r\n");
      out.write("            borderWidth: 0\r\n");
      out.write("        }\r\n");
      out.write("    },\r\n");
      out.write("    xAxis: {\r\n");
      out.write("    \tcategories: [\r\n");
      out.write("            'Jan',\r\n");
      out.write("            'Feb',\r\n");
      out.write("            'Mar',\r\n");
      out.write("            'Apr',\r\n");
      out.write("            'May',\r\n");
      out.write("            'Jun',\r\n");
      out.write("            'Jul',\r\n");
      out.write("            'Aug',\r\n");
      out.write("            'Sep',\r\n");
      out.write("            'Oct',\r\n");
      out.write("            'Nov',\r\n");
      out.write("            'Dec'\r\n");
      out.write("        ],\r\n");
      out.write("        crosshair: true\r\n");
      out.write("    },\r\n");
      out.write("    series: [{\r\n");
      out.write("        name: '재고',\r\n");
      out.write("        data: []\r\n");
      out.write("\r\n");
      out.write("    }, {\r\n");
      out.write("        name: '판매량',\r\n");
      out.write("        data: [83.6, 78.8, 98.5, 93.4, 106.0, 84.5, 105.0, 104.3, 91.2, 83.5, 106.6, 92.3]\r\n");
      out.write("\r\n");
      out.write("    }, {\r\n");
      out.write("        name: '판매총액',\r\n");
      out.write("        data: [48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0, 59.6, 52.4, 65.2, 59.3, 51.2]\r\n");
      out.write("\r\n");
      out.write("    }]\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function requestData() {\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: 'adminchartimpl.mc',\r\n");
      out.write("        dataType: 'json',\r\n");
      out.write("        type: \"get\",\r\n");
      out.write("        async:false,\r\n");
      out.write("        data : {ja : \"name\"},\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("        \tchart.addSeries(\"재고\", data[0]);\r\n");
      out.write("            },\r\n");
      out.write("        cache: false\r\n");
      out.write("    });\r\n");
      out.write("};\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\trequestData();\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
